Subject: [PATCH] rout and template example
---
Index: src/app/week/week.component.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/app/week/week.component.html b/src/app/week/week.component.html
--- a/src/app/week/week.component.html	(revision 8c5c92adff1b3ee28357856da4cfa0dfa4a3df19)
+++ b/src/app/week/week.component.html	(date 1717675446089)
@@ -1,5 +1,3 @@
-<div class="week" #weekView>
-  <ng-container>
-    <app-day *ngFor="let day of data" [content]="getContent(day)"></app-day>
-  </ng-container>
+<div class="week">
+    <app-day *ngFor="let day of data" [day]="day"></app-day>
 </div>
Index: src/app/week/week.component.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/app/week/week.component.ts b/src/app/week/week.component.ts
--- a/src/app/week/week.component.ts	(revision 8c5c92adff1b3ee28357856da4cfa0dfa4a3df19)
+++ b/src/app/week/week.component.ts	(date 1717674602400)
@@ -1,30 +1,16 @@
-import { Component, Inject, Injectable, Input } from '@angular/core';
-import { ITEM, ITEMS } from '../../shared/consts';
-import { Show } from '../interfaces';
-import { SCHEDULE_SHOW, WEATHER_SHOW } from '../tokens';
+import {ChangeDetectionStrategy, Component, Input} from '@angular/core';
+import {WeekItemInterface} from "./week.interface";
 
 @Component({
   selector: 'app-week',
   templateUrl: './week.component.html',
-  styleUrl: './week.component.scss'
+  styleUrl: './week.component.scss',
+  changeDetection: ChangeDetectionStrategy.OnPush
 })
 
 export class WeekComponent {
-  @Input() data: ITEM[] = [];
-  private currentShow: Show;
-
-  constructor(
-    @Inject(WEATHER_SHOW) private weatherShow: Show,
-    @Inject(SCHEDULE_SHOW) private scheduleShow: Show
-  ) {
-    this.currentShow = this.weatherShow;
-  }
+  @Input() public data: WeekItemInterface = [];
 
-  setViewType(type: 'weather' | 'schedule') {
-    this.currentShow = type === 'weather' ? this.weatherShow : this.scheduleShow;
-  }
-
-  getContent(day: ITEM): string {
-    return this.currentShow.show(day);
+  constructor() {
   }
 }
Index: src/app/weather/weather.component.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/app/weather/weather.component.html b/src/app/weather/weather.component.html
new file mode 100644
--- /dev/null	(date 1717675446083)
+++ b/src/app/weather/weather.component.html	(date 1717675446083)
@@ -0,0 +1,4 @@
+<app-week [data]="weatherList"></app-week>
+<div #weather>
+
+</div>
Index: src/app/weather/weather.component.spec.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/app/weather/weather.component.spec.ts b/src/app/weather/weather.component.spec.ts
new file mode 100644
--- /dev/null	(date 1717672297791)
+++ b/src/app/weather/weather.component.spec.ts	(date 1717672297791)
@@ -0,0 +1,23 @@
+import { ComponentFixture, TestBed } from '@angular/core/testing';
+
+import { WeatherComponent } from './weather.component';
+
+describe('WeatherComponent', () => {
+  let component: WeatherComponent;
+  let fixture: ComponentFixture<WeatherComponent>;
+
+  beforeEach(async () => {
+    await TestBed.configureTestingModule({
+      declarations: [WeatherComponent]
+    })
+    .compileComponents();
+    
+    fixture = TestBed.createComponent(WeatherComponent);
+    component = fixture.componentInstance;
+    fixture.detectChanges();
+  });
+
+  it('should create', () => {
+    expect(component).toBeTruthy();
+  });
+});
Index: src/app/weather/weather.component.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/app/weather/weather.component.ts b/src/app/weather/weather.component.ts
new file mode 100644
--- /dev/null	(date 1717674786683)
+++ b/src/app/weather/weather.component.ts	(date 1717674786683)
@@ -0,0 +1,17 @@
+import {ChangeDetectionStrategy, Component} from '@angular/core';
+import {WeekItemInterface} from "../week/week.interface";
+import {WeatherInterface} from "./weather.interface";
+import {ITEMS} from "../../shared/consts";
+
+@Component({
+  selector: 'app-weather',
+  templateUrl: './weather.component.html',
+  styleUrl: './weather.component.scss',
+  changeDetection: ChangeDetectionStrategy.OnPush
+})
+export class WeatherComponent {
+  public weatherList: WeekItemInterface<WeatherInterface> = ITEMS.map(({date, day, weather}) => ({
+    date: new Date(),
+    payLoad: weather
+  }));
+}
Index: src/app/schedule/schedule.component.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/app/schedule/schedule.component.html b/src/app/schedule/schedule.component.html
new file mode 100644
--- /dev/null	(date 1717672469250)
+++ b/src/app/schedule/schedule.component.html	(date 1717672469250)
@@ -0,0 +1,1 @@
+<p>schedule works!</p>
Index: src/app/app.component.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/app/app.component.html b/src/app/app.component.html
--- a/src/app/app.component.html	(revision 8c5c92adff1b3ee28357856da4cfa0dfa4a3df19)
+++ b/src/app/app.component.html	(date 1717672515819)
@@ -1,5 +1,5 @@
 <div>
-  <app-nav></app-nav>
-  <app-week></app-week>
+  <app-nav (onTabClick)="onTabClick($event)"></app-nav>
+<!--  <app-week></app-week>-->
   <router-outlet></router-outlet>
 </div>
Index: src/app/schedule/schedule.component.spec.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/app/schedule/schedule.component.spec.ts b/src/app/schedule/schedule.component.spec.ts
new file mode 100644
--- /dev/null	(date 1717672469250)
+++ b/src/app/schedule/schedule.component.spec.ts	(date 1717672469250)
@@ -0,0 +1,23 @@
+import { ComponentFixture, TestBed } from '@angular/core/testing';
+
+import { ScheduleComponent } from './schedule.component';
+
+describe('ScheduleComponent', () => {
+  let component: ScheduleComponent;
+  let fixture: ComponentFixture<ScheduleComponent>;
+
+  beforeEach(async () => {
+    await TestBed.configureTestingModule({
+      declarations: [ScheduleComponent]
+    })
+    .compileComponents();
+    
+    fixture = TestBed.createComponent(ScheduleComponent);
+    component = fixture.componentInstance;
+    fixture.detectChanges();
+  });
+
+  it('should create', () => {
+    expect(component).toBeTruthy();
+  });
+});
Index: src/app/app-routing.module.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/app/app-routing.module.ts b/src/app/app-routing.module.ts
--- a/src/app/app-routing.module.ts	(revision 8c5c92adff1b3ee28357856da4cfa0dfa4a3df19)
+++ b/src/app/app-routing.module.ts	(date 1717675081467)
@@ -1,13 +1,14 @@
 import { NgModule } from '@angular/core';
 import { RouterModule, Routes } from '@angular/router';
-import { DayComponent } from './day/day.component';
 import { WeekComponent } from './week/week.component';
+import {WeatherComponent} from "./weather/weather.component";
+import {ScheduleComponent} from "./schedule/schedule.component";
 
 const routes: Routes = [
   { path: '', redirectTo: 'weather', pathMatch: 'full' },
-  { path: 'weather', component: WeekComponent },
-  { path: 'schedule', component: WeekComponent },
-  { path: '**', redirectTo: 'weather' }
+  { path: 'weather', component: WeatherComponent },
+  { path: 'schedule', component: ScheduleComponent },
+  { path: '**', redirectTo: 'schedule' }
 ];
 
 
Index: src/app/schedule/schedule.component.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/app/schedule/schedule.component.ts b/src/app/schedule/schedule.component.ts
new file mode 100644
--- /dev/null	(date 1717672469260)
+++ b/src/app/schedule/schedule.component.ts	(date 1717672469260)
@@ -0,0 +1,10 @@
+import { Component } from '@angular/core';
+
+@Component({
+  selector: 'app-schedule',
+  templateUrl: './schedule.component.html',
+  styleUrl: './schedule.component.scss'
+})
+export class ScheduleComponent {
+
+}
Index: src/app/app.component.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/app/app.component.ts b/src/app/app.component.ts
--- a/src/app/app.component.ts	(revision 8c5c92adff1b3ee28357856da4cfa0dfa4a3df19)
+++ b/src/app/app.component.ts	(date 1717674916738)
@@ -6,5 +6,10 @@
   styleUrl: './app.component.scss'
 })
 export class AppComponent {
+
   title = 'My Angular App';
+  public activeTab = '';
+  public onTabClick(tab: string): void {
+    this.activeTab = tab;
+  }
 }
Index: src/app/week/week.interface.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/app/week/week.interface.ts b/src/app/week/week.interface.ts
new file mode 100644
--- /dev/null	(date 1717674602395)
+++ b/src/app/week/week.interface.ts	(date 1717674602395)
@@ -0,0 +1,4 @@
+import {DayInterface} from "../day/day.interface";
+
+export type WeekItemInterface<T = Record<string, any>>  = DayInterface<T>[];
+
Index: src/app/app.module.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/app/app.module.ts b/src/app/app.module.ts
--- a/src/app/app.module.ts	(revision 8c5c92adff1b3ee28357856da4cfa0dfa4a3df19)
+++ b/src/app/app.module.ts	(date 1717672482525)
@@ -7,13 +7,17 @@
 import { WeekComponent } from './week/week.component';
 import { NavComponent } from './nav/nav.component';
 import { SCHEDULE_SHOW, WEATHER_SHOW } from './tokens';
+import { WeatherComponent } from './weather/weather.component';
+import { ScheduleComponent } from './schedule/schedule.component';
 
 @NgModule({
   declarations: [
     AppComponent,
     DayComponent,
     WeekComponent,
-    NavComponent
+    NavComponent,
+    WeatherComponent,
+    ScheduleComponent
   ],
   imports: [
     BrowserModule,
Index: src/app/weather/weather.interface.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/app/weather/weather.interface.ts b/src/app/weather/weather.interface.ts
--- a/src/app/weather/weather.interface.ts	(revision 8c5c92adff1b3ee28357856da4cfa0dfa4a3df19)
+++ b/src/app/weather/weather.interface.ts	(date 1717674571016)
@@ -1,15 +1,5 @@
-import { ITEM } from "../../shared/consts";
-import { Show } from "../interfaces";
-
-export class WeatherShow implements Show {
-    show(data: ITEM): string {
-      return `
-        <div>
-          <h3>${data.day} - ${data.date}</h3>
-          <p>Temperature: ${data.weather.temperature}</p>
-          <p>Type: ${data.weather.type}</p>
-          <p>Air: ${data.weather.air}</p>
-        </div>
-      `;
-    }
-}
\ No newline at end of file
+export interface WeatherInterface {
+  temperature: string;
+  type: string;
+  air: string;
+}
Index: src/app/day/day.interface.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/app/day/day.interface.ts b/src/app/day/day.interface.ts
new file mode 100644
--- /dev/null	(date 1717674570990)
+++ b/src/app/day/day.interface.ts	(date 1717674570990)
@@ -0,0 +1,9 @@
+export interface DayInterface<T = Record<string, any>> {
+  date: Date;
+  payLoad: T;
+  // schedule: {
+  //   todos: string;
+  //   dayoff: boolean
+  //
+  // }
+}
Index: src/app/day/day.component.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/app/day/day.component.ts b/src/app/day/day.component.ts
--- a/src/app/day/day.component.ts	(revision 8c5c92adff1b3ee28357856da4cfa0dfa4a3df19)
+++ b/src/app/day/day.component.ts	(date 1717675446077)
@@ -1,11 +1,15 @@
-import { Component, Input } from '@angular/core';
+import {ChangeDetectionStrategy, Component, Input} from '@angular/core';
+import {DayInterface} from "./day.interface";
 
 @Component({
   selector: 'app-day',
   templateUrl: './day.component.html',
   styleUrl: './day.component.scss',
+  changeDetection: ChangeDetectionStrategy.OnPush
 })
 
 export class DayComponent {
-  @Input() content: string = '';
+  @Input() day!: DayInterface;
+  constructor() {
+  }
 }
Index: src/shared/consts.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/shared/consts.ts b/src/shared/consts.ts
--- a/src/shared/consts.ts	(revision 8c5c92adff1b3ee28357856da4cfa0dfa4a3df19)
+++ b/src/shared/consts.ts	(date 1717673589448)
@@ -1,5 +1,5 @@
 export const NAV_ITEMS = [
-  "Weather", "TimeTable"
+  'Weather', 'TimeTable'
 ];
 
 export type ITEM = {
@@ -12,51 +12,51 @@
   };
   schedule: {
     todos: string;
-    dayoff: boolean
+    dayOff: boolean
 
   }
 }
 
-export const ITEMS : ITEM[] = [
-{
-  date: "31/05",
-  day: "Friday",
-  weather: {
-    temperature: "+20",
-    type: "Sun",
-    air: "30"
-  },
-  schedule: {
-    todos: "cleaning",
-    dayoff: false
-  }
-},
-{
-  date: "1/06",
-  day: "Saturday",
-  weather: {
-    temperature: "+23",
-    type: "Rain",
-    air: "35"
-  },
-  schedule: {
-    todos: "studing",
-    dayoff: true
-  }
-},
-{
-  date: "2/06",
-  day: "Sunday",
-  weather: {
-    temperature: "+13",
-    type: "Cloud",
-    air: "12"
-  },
-  schedule: {
-    todos: "shoping",
-    dayoff: true
-  }
-}
+export const ITEMS: ITEM[] = [
+  {
+    date: '31/05',
+    day: 'Friday',
+    weather: {
+      temperature: '+20',
+      type: 'Sun',
+      air: '30'
+    },
+    schedule: {
+      todos: 'cleaning',
+      dayOff: false
+    }
+  },
+  {
+    date: '1/06',
+    day: 'Saturday',
+    weather: {
+      temperature: '+23',
+      type: 'Rain',
+      air: '35'
+    },
+    schedule: {
+      todos: 'studing',
+      dayOff: true
+    }
+  },
+  {
+    date: '2/06',
+    day: 'Sunday',
+    weather: {
+      temperature: '+13',
+      type: 'Cloud',
+      air: '12'
+    },
+    schedule: {
+      todos: 'shoping',
+      dayOff: true
+    }
+  }
 ]
 
 
Index: src/app/day/day.component.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/app/day/day.component.html b/src/app/day/day.component.html
--- a/src/app/day/day.component.html	(revision 8c5c92adff1b3ee28357856da4cfa0dfa4a3df19)
+++ b/src/app/day/day.component.html	(date 1717675684088)
@@ -1,4 +1,6 @@
-<div [innerHTML]="content">
-
+<div>
+  <h3>{{ day.date | date: 'ddMMyyyy' }} </h3>
+  <button></button>
+<!--  <template>-->
 </div>
 
Index: src/app/nav/nav.component.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/app/nav/nav.component.ts b/src/app/nav/nav.component.ts
--- a/src/app/nav/nav.component.ts	(revision 8c5c92adff1b3ee28357856da4cfa0dfa4a3df19)
+++ b/src/app/nav/nav.component.ts	(date 1717672296399)
@@ -1,4 +1,4 @@
-import { Component, ViewChild } from '@angular/core';
+import {Component, EventEmitter, Output, ViewChild} from '@angular/core';
 import { WeekComponent } from '../week/week.component';
 
 @Component({
@@ -7,12 +7,9 @@
   styleUrl: './nav.component.scss'
 })
 export class NavComponent {
-  @ViewChild('weekView') weekView!: WeekComponent;
-  showWeather() {
-    this.weekView.setViewType('weather');
-  }
+  @Output() public onTabClick = new EventEmitter<string>();
 
-  showSchedule() {
-    this.weekView.setViewType('schedule');
+  public setActiveTab(tabName: string): void {
+    this.onTabClick.emit(tabName);
   }
 }
Index: src/app/nav/nav.component.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/app/nav/nav.component.html b/src/app/nav/nav.component.html
--- a/src/app/nav/nav.component.html	(revision 8c5c92adff1b3ee28357856da4cfa0dfa4a3df19)
+++ b/src/app/nav/nav.component.html	(date 1717672296392)
@@ -1,4 +1,4 @@
 <nav class="navbar bg-body-tertiary">
-  <button routerLink="/weather" (click)="showWeather()">Weather</button>
-  <button routerLink="/schedule" (click)="showSchedule()">Schedule</button>
+  <button routerLink="/weather" (click)="onTabClick.emit('weather')">Weather</button>
+  <button routerLink="/schedule" (click)="setActiveTab('schedule')">Schedule</button>
 </nav>
diff --git a/src/app/weather/weather.component.scss b/src/app/weather/weather.component.scss
new file mode 100644
diff --git a/src/app/schedule/schedule.component.scss b/src/app/schedule/schedule.component.scss
new file mode 100644
